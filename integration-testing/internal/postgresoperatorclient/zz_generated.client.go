/*
Package postgresoperatorclient GENERATED BY gengo:client
DON'T EDIT THIS FILE
*/
package postgresoperatorclient

import (
	io "io"

	archivev1 "github.com/innoai-tech/postgres-operator/pkg/apis/archive/v1"
	courier "github.com/octohelm/courier/pkg/courier"
	courierhttp "github.com/octohelm/courier/pkg/courierhttp"
	openidv1 "github.com/octohelm/jwx/pkg/apis/openid/v1"
	metav1 "github.com/octohelm/objectkind/pkg/apis/meta/v1"
	sqltypetime "github.com/octohelm/storage/pkg/sqltype/time"
)

type Liveness struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/status/liveness"`

	LivenessParameters
}

type LivenessParameters struct{}

func (Liveness) ResponseData() *LivenessResponse {
	return new(LivenessResponse)
}

type Readiness struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/status/readiness"`

	ReadinessParameters
}

type ReadinessParameters struct{}

func (Readiness) ResponseData() *ReadinessResponse {
	return new(ReadinessResponse)
}

type ListArchive struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/archive/archives"`

	ListArchiveParameters
}

type ListArchiveParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (ListArchive) ResponseData() *ListArchiveResponse {
	return new(ListArchiveResponse)
}

type CreateArchive struct {
	courierhttp.MethodPost `path:"/api/postgres-operator/v1/archive/archives"`

	CreateArchiveParameters
}

type CreateArchiveParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (CreateArchive) ResponseData() *CreateArchiveResponse {
	return new(CreateArchiveResponse)
}

type RequestRestoreArchive struct {
	courierhttp.MethodPut `path:"/api/postgres-operator/v1/archive/archives/{archiveCode}/restore-request"`

	RequestRestoreArchiveParameters
}

type RequestRestoreArchiveParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`

	ArchiveCode ArchiveV1ArchiveCode `name:"archiveCode" in:"path"`
}

func (RequestRestoreArchive) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type CancelRestoreRequest struct {
	courierhttp.MethodDelete `path:"/api/postgres-operator/v1/archive/request-restore"`

	CancelRestoreRequestParameters
}

type CancelRestoreRequestParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (CancelRestoreRequest) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type CurrentRestoreRequest struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/archive/request-restore"`

	CurrentRestoreRequestParameters
}

type CurrentRestoreRequestParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (CurrentRestoreRequest) ResponseData() *CurrentRestoreRequestResponse {
	return new(CurrentRestoreRequestResponse)
}

type DeleteArchive struct {
	courierhttp.MethodDelete `path:"/api/postgres-operator/v1/archive/archives/{archiveCode}"`

	DeleteArchiveParameters
}

type DeleteArchiveParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`

	ArchiveCode ArchiveV1ArchiveCode `name:"archiveCode" in:"path"`
}

func (DeleteArchive) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type ExportArchiveAsTar struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/archive/archives/{archiveCode}/as-tar"`

	ExportArchiveAsTarParameters
}

type ExportArchiveAsTarParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`

	ArchiveCode ArchiveV1ArchiveCode `name:"archiveCode" in:"path"`
}

func (ExportArchiveAsTar) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type ImportArchiveFromTar struct {
	courierhttp.MethodPut `path:"/api/postgres-operator/v1/archive/archives/{archiveCode}/from-tar"`

	ImportArchiveFromTarParameters
}

type ImportArchiveFromTarParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`

	ArchiveCode ArchiveV1ArchiveCode `name:"archiveCode" in:"path"`

	RequestBody IoReadCloser `in:"body" mime:"application/octet-stream"`
}

func (ImportArchiveFromTar) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type Restart struct {
	courierhttp.MethodPost `path:"/api/postgres-operator/v1/service/restart"`

	RestartParameters
}

type RestartParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (Restart) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type CurrentUserInfo struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/openid/user/info"`

	CurrentUserInfoParameters
}

type CurrentUserInfoParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (CurrentUserInfo) ResponseData() *CurrentUserInfoResponse {
	return new(CurrentUserInfoResponse)
}

type ExchangeToken struct {
	courierhttp.MethodPost `path:"/api/postgres-operator/v1/openid/auth/token"`

	ExchangeTokenParameters
}

type ExchangeTokenParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization,omitzero" in:"header"`

	RequestBody OpenidV1GrantPayload `in:"body" mime:"application/x-www-form-urlencoded"`
}

func (ExchangeToken) ResponseData() *ExchangeTokenResponse {
	return new(ExchangeTokenResponse)
}

type JWKs struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1/openid/.well-known/jwks.json"`

	JWKsParameters
}

type JWKsParameters struct{}

func (JWKs) ResponseData() *JWKsResponse {
	return new(JWKsResponse)
}

type BaseURL struct {
	courierhttp.MethodGet `path:"/api/postgres-operator/v1"`

	BaseURLParameters
}

type BaseURLParameters struct {
	Authorization OpenidV1Authorization `name:"Authorization" in:"header"`
}

func (BaseURL) ResponseData() *BaseURLResponse {
	return new(BaseURLResponse)
}

type (
	ArchiveV1Archive       = archivev1.Archive
	ArchiveV1ArchiveAsList = metav1.List[archivev1.Archive]
	ArchiveV1ArchiveCode   = archivev1.ArchiveCode
	ArchiveV1File          = archivev1.File
	BaseURLResponse        = any
)

type (
	CreateArchiveResponse         = archivev1.Archive
	CurrentRestoreRequestResponse = archivev1.Archive
	CurrentUserInfoResponse       = openidv1.UserInfo
	ExchangeTokenResponse         = openidv1.Token
	IoReadCloser                  = io.ReadCloser
	JWKsResponse                  = openidv1.Jwks
	ListArchiveResponse           = metav1.List[archivev1.Archive]
	LivenessResponse              = map[string]any
)

type (
	OpenidV1Authorization          = openidv1.Authorization
	OpenidV1AuthorizationCodeGrant = openidv1.AuthorizationCodeGrant
	OpenidV1ClientCredentialsGrant = openidv1.ClientCredentialsGrant
	OpenidV1GrantPayload           = openidv1.GrantPayload
	OpenidV1Jwk                    = openidv1.Jwk
	OpenidV1Jwks                   = openidv1.Jwks
	OpenidV1PasswordGrant          = openidv1.PasswordGrant
	OpenidV1RefreshTokenGrant      = openidv1.RefreshTokenGrant
	OpenidV1Token                  = openidv1.Token
	OpenidV1UserInfo               = openidv1.UserInfo
	ReadinessResponse              = map[string]any
)

type SqltypeTimeTimestamp = sqltypetime.Timestamp
